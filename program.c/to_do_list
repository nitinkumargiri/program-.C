#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_TASKS 100
#define MAX_LEN 256

typedef struct {
    char description[MAX_LEN];
    int completed;
} Task;

Task tasks[MAX_TASKS];
int task_count = 0;

void loadTasks() {
    FILE *file = fopen("tasks.txt", "r");
    if (!file) return;

    while (fscanf(file, "%[^;];%d\n", tasks[task_count].description, &tasks[task_count].completed) != EOF) {
        task_count++;
    }

    fclose(file);
}

void saveTasks() {
    FILE *file = fopen("tasks.txt", "w");
    for (int i = 0; i < task_count; i++) {
        fprintf(file, "%s;%d\n", tasks[i].description, tasks[i].completed);
    }
    fclose(file);
}

void addTask() {
    if (task_count >= MAX_TASKS) {
        printf("Task list is full!\n");
        return;
    }

    printf("Enter task description: ");
    getchar(); // clear newline left by scanf
    fgets(tasks[task_count].description, MAX_LEN, stdin);
    tasks[task_count].description[strcspn(tasks[task_count].description, "\n")] = 0; // remove newline
    tasks[task_count].completed = 0;
    task_count++;
    saveTasks();
}

void listTasks() {
    printf("\nTo-Do List:\n");
    for (int i = 0; i < task_count; i++) {
        printf("%d. [%c] %s\n", i + 1, tasks[i].completed ? 'x' : ' ', tasks[i].description);
    }
}

void markCompleted() {
    int index;
    listTasks();
    printf("Enter task number to mark as completed: ");
    scanf("%d", &index);
    if (index < 1 || index > task_count) {
        printf("Invalid task number.\n");
        return;
    }
    tasks[index - 1].completed = 1;
    saveTasks();
}

int main() {
    int choice;

    loadTasks();

    while (1) {
        printf("\n1. Add Task\n2. View Tasks\n3. Mark Task Completed\n4. Exit\n");
        printf("Choose an option: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1: addTask(); break;
            case 2: listTasks(); break;
            case 3: markCompleted(); break;
            case 4: saveTasks(); return 0;
            default: printf("Invalid choice.\n");
        }
    }
}